{"version":3,"sources":["Contacts/Contacts.module.css","Form/Form.module.css","Container/Container.module.css","Filter/Filter.module.css","Container/Container.js","redux/contacts-action.js","redux/contacts-operation.js","redux/contacts-selection.js","Form/Form.js","Contacts/Contacts.js","Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","name","number","dispatch","a","contact","post","data","id","delete","then","catch","error","get","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","connect","onSubmit","contactsOperations","useState","setName","setNumber","useSelector","contactsSelectors","useDispatch","handleChange","e","target","value","reset","preventDefault","some","alert","style","form","shortid","generate","type","pattern","title","onChange","required","button","onDeleteContact","list","map","item","text","onClick","fetchContacts","useEffect","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c2f99e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__1Ti0q\",\"text\":\"Contacts_text__2f1a6\",\"button\":\"Contacts_button__2QIkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__15gUD\",\"button\":\"Form_button__2f54r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3Ha4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__33L4U\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n} from './contacts-action';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  async dispatch => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n\r\n  };\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };","import { createSelector } from 'reselect';\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getLoading,\r\n  getVisibleContacts,\r\n};","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport style from './Form.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from '../redux';\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handelSubmit = e => {\r\n    e.preventDefault();\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handelSubmit} className={style.form}>\r\n      <label>\r\n        <span>Name</span>\r\n        <input\r\n          id={shortid.generate()}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>Number</span>\r\n        <input\r\n          id={shortid.generate()}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={style.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);","import style from './Contacts.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../redux';\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={style.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={style.item}>\r\n          <p className={style.text}>{name}:</p>\r\n          <span>{number}</span>\r\n          <button className={style.button} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, changeFilter } from '../redux';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <p className={style.text}>Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import Container from './Container';\nimport Form from './Form';\nimport Contacts from './Contacts';\nimport Filter from './Filter';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from './redux';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n} from './contacts-action';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactError]: (_, { payload }) => payload,\r\n  [fetchContactRequest]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts-reducer';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    \r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './base-style.module.css';\nimport {} from './redux/contacts-types';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}